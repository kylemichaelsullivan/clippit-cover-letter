@import 'tailwindcss';

@theme {
	--breakpoint-xs: 350px;
}

/* Palette */
:root {
	--white: #ffffff;
	--red: #dc2626;
	--green: #10b981;
	--light-blue: #60a5fa;
	--blue: #3b82f6;
	--light-gray: #cbd5e1;
	--gray: #64748b;
	--black: #0f172a;

	/* Text Sizes */
	--text-2xs: 0.625rem;
	--text-2xs--line-height: 0.75rem;
}

/* Light Mode */
:root {
	--color-white: var(--white);
	--color-red: var(--red);
	--color-green: var(--green);
	--color-light-blue: var(--light-blue);
	--color-blue: var(--blue);
	--color-light-gray: var(--light-gray);
	--color-gray: var(--gray);
	--color-black: var(--black);
	color-scheme: light;
}

/* Dark Mode */
.dark {
	--color-white: var(--black);
	--color-light-blue: var(--blue);
	--color-blue: var(--light-blue);
	--color-light-gray: var(--gray);
	--color-gray: var(--light-gray);
	--color-black: var(--white);
	color-scheme: dark;
}

/* Elements */
*:focus-visible {
	outline: 2px solid var(--color-blue);
	outline-offset: 2px;
}

body {
	font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif;
	background-color: var(--color-light-gray);
	color: var(--color-black);
}

button,
label {
	cursor: pointer;
}

button {
	border: 1px solid;
}

label {
	color: var(--color-black);
	font-weight: 500;
}

.FormFieldContainer label:has(+ input[required]) > span::after,
.FormFieldContainer label:has(+ textarea[required]) > span::after,
.FormFieldContainer label:has(+ select[required]) > span::after {
	content: ' *';
	color: var(--color-red);
}

input,
textarea,
select {
	background-color: var(--color-white);
	border: 1px solid var(--color-black);
	border-radius: 0.5rem;
	color: var(--color-black);
	font-size: 0.875rem;
	padding: 0.5rem 0.75rem;
	transition: border-color 0.2s ease;
}

input:focus,
textarea:focus,
select:focus {
	border-color: var(--color-blue);
	outline: none;
	box-shadow: 0 0 0 1px var(--color-blue);
}

input::placeholder,
textarea::placeholder {
	color: var(--color-gray);
}

/* Label hover effects */
label:hover + input,
label:hover + textarea,
label:hover + select,
.FormField label:hover + input,
.FormField label:hover + textarea,
.FormField label:hover + select {
	border-color: var(--color-blue);
}

/* Prefix/Suffix hover effects */
.FormField .input-prefix:hover + input,
.FormField:has(.input-suffix:hover) input {
	border-color: var(--color-blue);
}

/* Direct hover effects for inputs without labels */
input:hover,
textarea:hover,
select:hover {
	border-color: var(--color-blue);
}

textarea {
	font-family: inherit;
	min-height: 6rem;
	resize: vertical;
}

input[type='checkbox'],
input[type='radio'] {
	width: 1rem;
	height: 1rem;
	padding: 0;
	border-radius: 0.25rem;
	border: 1px solid var(--color-black);
	background-color: var(--color-white);
	accent-color: var(--color-blue);
}

input[type='checkbox']:focus,
input[type='radio']:focus {
	outline: none;
	box-shadow:
		0 0 0 2px var(--color-blue),
		0 0 0 4px var(--color-white);
}

input[type='file'] {
	padding: 0.5rem;
}

a {
	color: var(--color-blue);
	text-decoration: underline;
	text-underline-offset: 2px;
}

a:hover {
	text-decoration-thickness: 2px;
}

button {
	background-color: var(--color-light-gray);
	border: 1px solid var(--color-light-gray);
	border-radius: 0.5rem;
	color: var(--color-black);
	font-weight: 500;
	padding: 0.75rem 1.5rem;
	transition: all 0.2s ease;
	cursor: pointer;
}

button:hover:not(:disabled) {
	background-color: var(--color-gray);
	border-color: var(--color-gray);
	color: var(--color-white);
}

button:disabled {
	cursor: not-allowed;
	opacity: 0.5;
}

button:active {
	transform: translateY(0);
}

/* Utility Classes */
/* Shadows */
.shadow-xs {
	box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
}

.shadow-sm {
	box-shadow:
		0 1px 3px 0 rgba(0, 0, 0, 0.1),
		0 1px 2px 0 rgba(0, 0, 0, 0.06);
}

.shadow-md {
	box-shadow:
		0 4px 6px -1px rgba(0, 0, 0, 0.1),
		0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.shadow-lg {
	box-shadow:
		0 10px 15px -3px rgba(0, 0, 0, 0.1),
		0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

.shadow-xl {
	box-shadow:
		0 20px 25px -5px rgba(0, 0, 0, 0.1),
		0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

/* Dark mode shadow adjustments */
.dark .shadow-xs {
	box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.2);
}

.dark .shadow-sm {
	box-shadow:
		0 1px 3px 0 rgba(0, 0, 0, 0.3),
		0 1px 2px 0 rgba(0, 0, 0, 0.2);
}

.dark .shadow-md {
	box-shadow:
		0 4px 6px -1px rgba(0, 0, 0, 0.3),
		0 2px 4px -1px rgba(0, 0, 0, 0.2);
}

.dark .shadow-lg {
	box-shadow:
		0 10px 15px -3px rgba(0, 0, 0, 0.3),
		0 4px 6px -2px rgba(0, 0, 0, 0.2);
}

.dark .shadow-xl {
	box-shadow:
		0 20px 25px -5px rgba(0, 0, 0, 0.3),
		0 10px 10px -5px rgba(0, 0, 0, 0.2);
}

/* Background */
.bg-white {
	background-color: var(--color-white);
}

.bg-light-blue {
	background-color: var(--color-light-blue);
}

.bg-blue {
	background-color: var(--color-blue);
}

.bg-light-gray {
	background-color: var(--color-light-gray);
}

.bg-gray {
	background-color: var(--color-gray);
}

.bg-black {
	background-color: var(--color-black);
}

.bg-red {
	background-color: var(--color-red);
}

.bg-green {
	background-color: var(--color-green);
}

/* Border */
.border-white {
	border-color: var(--color-white);
}

.border-light-blue {
	border-color: var(--color-light-blue);
}

.border-blue {
	border-color: var(--color-blue);
}

.border-light-gray {
	border-color: var(--color-light-gray);
}

.border-gray {
	border-color: var(--color-gray);
}

.border-black {
	border-color: var(--color-black);
}

.border-red {
	border-color: var(--color-red);
}

.border-green {
	border-color: var(--color-green);
}

/* Color */
.text-white {
	color: var(--color-white);
}

.text-light-blue {
	color: var(--color-light-blue);
}

.text-blue {
	color: var(--color-blue);
}

.text-light-gray {
	color: var(--color-light-gray);
}

.text-gray {
	color: var(--color-gray);
}

.text-black {
	color: var(--color-black);
}

.text-red {
	color: var(--color-red);
}

.text-green {
	color: var(--color-green);
}

/* Focus Ring */
.focus\:ring-blue:focus {
	--tw-ring-color: var(--color-blue);
}

.focus\:ring-red:focus {
	--tw-ring-color: var(--color-red);
}

/* Focus Border */
.focus\:border-blue:focus {
	border-color: var(--color-blue);
}

.focus\:border-red:focus {
	border-color: var(--color-red);
}

/* Hover Background */
.hover\:bg-white:hover {
	background-color: var(--color-white);
}

.hover\:bg-light-blue:hover {
	background-color: var(--color-light-blue);
}

.hover\:bg-blue:hover {
	background-color: var(--color-blue);
}

.hover\:bg-light-gray:hover {
	background-color: var(--color-light-gray);
}

.hover\:bg-gray:hover {
	background-color: var(--color-gray);
}

.hover\:bg-black:hover {
	background-color: var(--color-black);
}

.hover\:bg-red:hover {
	background-color: var(--color-red);
}

.hover\:bg-green:hover {
	background-color: var(--color-green);
}

/* Hover Border */
.hover\:border-white:hover {
	border-color: var(--color-white);
}

.hover\:border-light-blue:hover {
	border-color: var(--color-light-blue);
}

.hover\:border-blue:hover {
	border-color: var(--color-blue);
}

.hover\:border-light-gray:hover {
	border-color: var(--color-light-gray);
}

.hover\:border-gray:hover {
	border-color: var(--color-gray);
}

.hover\:border-black:hover {
	border-color: var(--color-black);
}

.hover\:border-red:hover {
	border-color: var(--color-red);
}

.hover\:border-green:hover {
	border-color: var(--color-green);
}

/* Hover Text */
.hover\:text-white:hover {
	color: var(--color-white);
}

.hover\:text-light-blue:hover {
	color: var(--color-light-blue);
}

.hover\:text-blue:hover {
	color: var(--color-blue);
}

.hover\:text-light-gray:hover {
	color: var(--color-light-gray);
}

.hover\:text-gray:hover {
	color: var(--color-gray);
}

.hover\:text-black:hover {
	color: var(--color-black);
}

.hover\:text-red:hover {
	color: var(--color-red);
}

.hover\:text-green:hover {
	color: var(--color-green);
}

/* Focus Background */
.focus\:bg-white:focus {
	background-color: var(--color-white);
}

.focus\:bg-light-blue:focus {
	background-color: var(--color-light-blue);
}

.focus\:bg-blue:focus {
	background-color: var(--color-blue);
}

.focus\:bg-light-gray:focus {
	background-color: var(--color-light-gray);
}

.focus\:bg-gray:focus {
	background-color: var(--color-gray);
}

.focus\:bg-black:focus {
	background-color: var(--color-black);
}

.focus\:bg-red:focus {
	background-color: var(--color-red);
}

.focus\:bg-green:focus {
	background-color: var(--color-green);
}

/* Focus Border (additional colors) */
.focus\:border-white:focus {
	border-color: var(--color-white);
}

.focus\:border-light-blue:focus {
	border-color: var(--color-light-blue);
}

.focus\:border-light-gray:focus {
	border-color: var(--color-light-gray);
}

.focus\:border-gray:focus {
	border-color: var(--color-gray);
}

.focus\:border-black:focus {
	border-color: var(--color-black);
}

.focus\:border-green:focus {
	border-color: var(--color-green);
}

/* Focus Text */
.focus\:text-white:focus {
	color: var(--color-white);
}

.focus\:text-light-blue:focus {
	color: var(--color-light-blue);
}

.focus\:text-blue:focus {
	color: var(--color-blue);
}

.focus\:text-light-gray:focus {
	color: var(--color-light-gray);
}

.focus\:text-gray:focus {
	color: var(--color-gray);
}

.focus\:text-black:focus {
	color: var(--color-black);
}

.focus\:text-red:focus {
	color: var(--color-red);
}

.focus\:text-green:focus {
	color: var(--color-green);
}

/* Focus Ring (additional colors) */
.focus\:ring-white:focus {
	--tw-ring-color: var(--color-white);
}

.focus\:ring-light-blue:focus {
	--tw-ring-color: var(--color-light-blue);
}

.focus\:ring-light-gray:focus {
	--tw-ring-color: var(--color-light-gray);
}

.focus\:ring-gray:focus {
	--tw-ring-color: var(--color-gray);
}

.focus\:ring-black:focus {
	--tw-ring-color: var(--color-black);
}

.focus\:ring-green:focus {
	--tw-ring-color: var(--color-green);
}

/* Text Sizes */
.text-2xs {
	font-size: var(--text-2xs);
	line-height: var(--tw-leading, var(--text-2xs--line-height));
}

/* Ensure our custom text size takes precedence over Tailwind defaults */
button.text-2xs,
.Button.text-2xs {
	font-size: var(--text-2xs);
	line-height: var(--tw-leading, var(--text-2xs--line-height));
}

.hidden-fallback {
	opacity: 0;
	pointer-events: none;
}

.print-content {
	white-space: pre-wrap;
}

/* Page Header Styles */
.page-header {
	text-align: center;
	padding: 0;
	margin: 0;
}

.page-header-name {
	font-size: 1.5rem;
	font-weight: bold;
	font-variant: small-caps;
	margin: 0 !important;
}

.page-header-contact {
	font-size: 0.875rem;
	color: var(--color-gray);
	margin: 0;
}

/* Component Styles*/
.FormField input {
	border-radius: 0.5rem;
}

.FormField:has(.input-prefix) input {
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
	border-left: none;
}

.FormField:has(.input-suffix) input {
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
	border-right: none;
}

.FormField .input-prefix {
	border-right: none;
	border-top-left-radius: 0.5rem;
	border-bottom-left-radius: 0.5rem;
}

.FormField .input-suffix {
	border-left: none;
	border-top-right-radius: 0.5rem;
	border-bottom-right-radius: 0.5rem;
}

.PhaseSwitcherButton {
	border: 2px solid transparent;
}

.PhaseSwitcherButton[aria-selected='true'] {
	border-color: var(--color-blue);
}

.SkillsRangeSlider input {
	padding-inline: 0.25em;
}

.SkillTag button {
	padding: 0.25rem;
}

/* Skills Tab Order using modern typed attr() with fallback */
.skill-group-card {
	/* Fallback for browsers that don't support typed attr() */
	order: var(--group-index, 0);
}

/* Skills button positioning */
.SkillGroupCard .FormFieldContainer .FormFieldLabel {
	padding: 0.75rem 0;
}

.SkillGroupCard .SkillGroupCardRemoveButton,
.SkillGroupCard .SkillTagsAddButton {
	position: absolute;
	width: 4rem;
	height: 2.5rem;
	top: 0.25rem;
	right: 0;
	padding: 0;
}

/* Reserve space for LastPass icon */
input[data-lpignore='false'] {
	padding-right: 24px !important;
	box-sizing: border-box;
}

/* Prose Styles for Markdown Content */
.prose-compact {
	color: var(--color-black);
	line-height: 1.25;
}

.prose-compact h1,
.prose-compact h2,
.prose-compact h3,
.prose-compact h4,
.prose-compact h5,
.prose-compact h6 {
	color: var(--color-black);
	font-weight: 700;
	line-height: 1.125;
	margin-bottom: 0;
}

.prose-compact h1,
.prose-compact h2 {
	text-transform: uppercase;
}

.prose-compact h1 {
	font-size: 1.875rem;
}

.prose-compact h2 {
	border-bottom: 1px solid var(--color-gray);
	font-size: 1.5rem;
}

.prose-compact h3 {
	font-size: 1.25rem;
}

.prose-compact h4 {
	font-size: 1.125rem;
}

.prose-compact p {
	line-height: 1.25;
	margin-bottom: 0;
}

.prose-compact h3 + ul,
.prose-compact h4 + ul,
.prose-compact h3 + ol,
.prose-compact h4 + ol,
.prose-compact h3 + p,
.prose-compact h4 + p {
	margin-top: -1em;
}

.prose-compact strong {
	color: var(--color-black);
	font-weight: 700;
}

.prose-compact em {
	font-style: italic;
}

.prose-compact ul,
.prose-compact ol {
	line-height: 1;
	padding-left: 1.5em;
	margin-bottom: 0;
}

.prose-compact li {
	margin-bottom: 0;
}

.prose-compact ul li {
	list-style-type: disc;
}

.prose-compact ol li {
	list-style-type: decimal;
}

.prose-compact blockquote {
	border-left: 4px solid var(--color-blue);
	color: var(--color-gray);
	font-style: italic;
	padding-left: 1em;
	margin: 0.75em 0;
}

.prose-compact code {
	background-color: var(--color-light-gray);
	border-radius: 0.25rem;
	font-size: 0.875em;
	font-family: var(--font-geist-mono), 'Courier New', monospace;
	padding: 0.125rem 0.25rem;
}

.prose-compact pre {
	background-color: var(--color-light-gray);
	border-radius: 0.5rem;
	padding: 1em;
	margin: 0.75em 0;
	overflow-x: auto;
}

.prose-compact pre code {
	background-color: transparent;
	padding: 0;
}

.prose-compact a {
	color: var(--color-blue);
	text-decoration: underline;
}

.prose-compact a:hover {
	color: var(--color-light-blue);
}

.prose-compact hr {
	border: none;
	border-top: 1px solid var(--color-light-gray);
	margin: 1em 0;
}
